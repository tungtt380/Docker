https://codingbee.net/centos/openssl-demo-encrypting-decrypting-files-using-both-symmetric-and-asymmetric-encryption

Encrypting and Decrypting data using symmetric encryption
$ echo 'hello world' > secrets.txt

Now we encrypt the file:
$ openssl aes-256-cbc -e -in secrets.txt -out secrets.txt.enc
enter aes-256-cbc encryption password:
Verifying - enter aes-256-cbc encryption password:

Now to decrypt, we use the same key (i.e. password):
$ openssl aes-256-cbc -d -in secrets.txt.enc -out secrets.txt.dec
enter aes-256-cbc decryption password:
$ cat secrets.txt.dec
hello world

$ openssl rand 128 > symmetric_keyfile.key

Now we encrypt like this:
$ openssl enc -in secrets.txt -out secrets.txt.enc -e -aes256 -k symmetric_keyfile.key
$ ll | grep secrets.txt.enc

--------------------------------------------------------------------------
Encrypting and Decrypting data using Asymmetric encryption
$ openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048
$ cat private_key.pem

$ openssl rsa -pubout -in private_key.pem -out public_key.pem
$ cat public_key.pem
$ echo 'hello world' > PlainTextFile.txt
$ cat PlainTextFile.txt

Let's now create an encrypted version of this file, called EncryptedData.txt:
$ openssl rsautl -encrypt -inkey public_key.pem -pubin -in PlainTextFile.txt -out EncryptedData.encrypted
$ openssl rsautl -decrypt -inkey private_key.pem -in EncryptedData.encrypted -out DecryptedData.txt   
$ cat DecryptedData.txt

-----------------------------------------------------------------------------------
Encrypting with the Private Key and Decrypting with the Public Key
$ cat PlainTextFile.txt
$ cat PlainTextFile.txt |  openssl rsautl -inkey private_key.pem -sign > data_thats_encrypted_with_private_key.encrypted
$ openssl rsautl -inkey public_key.pem -pubin -in data_thats_encrypted_with_private_key.encrypted
$ md5sum public_key.pem | openssl rsautl -inkey private_key.pem -sign > checksum.signed  
$ openssl rsautl -inkey public_key.pem -pubin -in checksum.signed
$ md5sum public_key.pem



